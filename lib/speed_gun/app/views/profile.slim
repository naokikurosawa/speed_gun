doctype html
html
  head
    meta charset="UTF-8"
    title Speed Gun: #{@profiler.path}
    link(rel="stylesheet" href="#{SpeedGun.config.prefix}/style.css")
    script(type="text/javascript" src="#{SpeedGun.config.prefix}/jquery-1.10.2.min.js")
    script(type="text/javascript" src="#{SpeedGun.config.prefix}/profile.js")
  body

    #header
      h1
        img(src="#{SpeedGun.config.prefix}/clock.png" height="24")
        | #{@profiler.path}?#{@profiler.query}
      dl
        dt Request ID
        dd= @profiler.id
        dt Requested At
        dd= @profiler.requested_at.strftime("%Y-%m-%d %H:%M:%S")

    - unless (@profiler.client_info || {}).empty?
      div#client-info
        h2 Browser

        .client-info.navigation
          h3 Navigation
          dl
            dt Type
            dd
              = @profiler.client_info['navigation']['type']
              | (#{['NAVIAGATE', 'RELOAD', 'BACK_OR_FORWARD'][@profiler.client_info['navigation']['type'].to_i] || 'UNKNOWN'})
            dt Redirect Count
            dd= @profiler.client_info['navigation']['redirect_count']

        .client-info.timeline
          h3 Timeline
          - timelines = @profiler.client_info['timeline'].map{|k,v| [k, v.to_i] }.sort_by {|t| t[1] }.reject {|a| a[1] == 0 }
          - min = timelines[0][1]
          - max = (timelines.last[1] - min) * 1.0
          - timelines.map! {|a| a[1] = (a[1] - min); [a[1], a[0]] }
          - timelines = timelines.group_by { |a| a[0] }
          #timeline-view
            - timelines.each_pair do |t, tm|
              .time(style="left: #{((t / max) * 100).to_i}%")
                .label(class="#{(t / max) > 0.5 ? 'right' : 'left'}")
                  = "#{tm.map(&:last).join(', ')} (#{t}ms)"

        .client-info.process
          - timings = @profiler.client_info['timing'].map {|k,v| [k.to_i, v] }.sort_by {|a| a[0] }.map {|a| a = a[1]; [a.keys.first, a.values.first] }
          h3 Process Time
          .elapsed-time
            = timings[0].last
            | ms
          ul
            - timings.each do |timing|
              li= "#{timing.first}: #{timing.last}ms"


    div#rack-envs
      h2 Rack ENVs
      ul
        - @profiler.env.each_pair do |key, val|
          li.env
            span.env-key= key
            span.env-val= val.inspect


    div#profiles
      h2 Profiles
      - last_profile_id = nil
      - profile_nest = []
      - @profiler.profiles.each do |profile|
        - if last_profile_id && profile.parent_profile_id == last_profile_id
          - profile_nest.push(last_profile_id)
        - while profile.parent_profile_id != profile_nest.last
          - profile_nest.pop
        div.profile(class="type-#{profile.type}" style="margin-left: #{profile_nest.length * 10}px;")
          p.elapsed-time
            = sprintf("%0.2f", BigDecimal("#{profile.elapsed_time * 1000}").floor(2))
            | ms
          h3 #{profile.label}: #{profile.title}
          .more
            dl
              dt Profile ID
              dd= profile.id
              - if profile.parent_profile_id
                dt Parent Profile ID
                dd= profile.parent_profile_id
            == profile.html
            ul.backtrace
              - profile.backtrace.each do |backtrace|
                li= backtrace
              - if profile.backtrace.empty?
                li No Backtraces
        - last_profile_id = profile.id
